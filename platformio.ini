#include <ESP8266WiFi.h>
#include <Wire.h> 
#include <LiquidCrystal_I2C.h>

#define SDA_PIN D2 // Define the SDA pin here
#define SCL_PIN D1 // Define the SCL Pin here

LiquidCrystal_I2C lcd(0x27,16,2); // Set the LCD address to 0x27 for a 16 chars and 2 line display

const char* ssid = "TP-LINK";
const char* password = "";

int l1 = D3; 
int l2 = D4;
int l3 = D5;
int l4 = D6;

int v1 = LOW;
int v2 = LOW;
int v3 = LOW;
int v4 = LOW;
int mode = 1;
int oldmode = 1;
int emr = LOW;
WiFiServer server(80);

void setup() {
  Serial.begin(9600);
  Wire.begin(SDA_PIN, SCL_PIN); // Initialize I2C communication
  lcd.init(); // Initialize the LCD
  lcd.backlight();

  pinMode(l1, OUTPUT);
  pinMode(l2, OUTPUT);
  pinMode(l3, OUTPUT);
  pinMode(l4, OUTPUT);

  digitalWrite(l1, v1);
  digitalWrite(l2, v2);
  digitalWrite(l3, v3);
  digitalWrite(l4, v4);

  // Connect to WiFi network
  lcd.setCursor(0,0); 
  lcd.print("Connecting to");
  lcd.setCursor(0,1); 
  lcd.print(ssid);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
  }
  lcd.clear();
  lcd.setCursor(0,0); 
  lcd.print("WiFi connected.");
  delay(1000);
  // Start the server
  server.begin();
  lcd.clear();
  lcd.setCursor(0,0); 
  lcd.print("Access at");
  lcd.setCursor(0,1); 
  lcd.print(WiFi.localIP());
  Serial.println(WiFi.localIP());
}

void loop() {
  // Check if a client has connected
  WiFiClient client = server.available();
  if (!client) {
    return;
  }
  // Wait until the client sends some data
  while(!client.available()){
    delay(1);
  }
  Serial.println(mode);
  // Read the first line of the request
  String request = client.readStringUntil('\r');
  client.flush();
  // Match the request
  if (request.indexOf("/L1=ON") != -1)  {
    v1 = HIGH;
  }
  if (request.indexOf("/L1=OFF") != -1)  {
    v1 = LOW;
  }
  if (request.indexOf("/L2=ON") != -1)  {
    v2 = HIGH;
  }
  if (request.indexOf("/L2=OFF") != -1)  {
    v2 = LOW;
  }
  if (request.indexOf("/L3=ON") != -1)  {
    v3 = HIGH;
  }
  if (request.indexOf("/L3=OFF") != -1)  {
    v3 = LOW;
  }
  if (request.indexOf("/L4=ON") != -1)  {
    v4 = HIGH;
  }
  if (request.indexOf("/L4=OFF") != -1)  {
    v4 = LOW;
  }
  if (request.indexOf("/EMR=ON") != -1)  {
    emr = HIGH;
    mode = 0;
    v1 = LOW; v2 = LOW; v3 = LOW; v4 = LOW;
  }
  if (request.indexOf("/EMR=OFF") != -1)  {
    emr = LOW;
    mode = oldmode;
  }

  // Control Lights
  if (mode > 0) {
    defaultlights();
  } else {
    digitalWrite(l1, v1);
    digitalWrite(l2, v2);
    digitalWrite(l3, v3);
    digitalWrite(l4, v4);
  }

  // Return the response
  client.println("HTTP/1.1 200 OK");
  client.println("Content-Type: text/html");
  client.println(""); // Do not forget this one
  client.println("<!DOCTYPE HTML>");
  client.println("<html>");
  client.println("<head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"><style>");
  client.println(".lbutton {border: none;color: white;text-align: center;text-decoration: none;display: inline-block;font-size: 24px;");
  client.println("margin: 4px 2px;cursor: pointer;border-radius: 10px;}.greenbutton {background-color: #04AA6D;}.offbutton {background-color: #D1D1D1;}.redbutton {background-color: #FF0000;}");
  client.println(".button3 {padding: 14px 20px;} a {text-decoration: none;}</style></head><body>");
  client.println("<center><h2 style=\"color:pink;\">Welcome to<br/><b>Mini-project on \"Smart Traffic System\"</b></h2>");
  client.println("<b><p style=\"color:#0A5E08\">Developed by<br/><br/>Mahiboob S B (2TG21EC029), Md Shahid K (2TG21EC031) &amp; N Lakshmikanth (2TG21EC032)<br/>");
  client.println("<sub>VI Semester, Department of Electronics and Communication Engineering, 2023-2024</sub></p>");
  client.println("<span style=\"color:blue\">under the guidance of Prof. Lohit Javali, ECE, TCE - Gadag</span></b><br/><br/>");

  if (v1 == HIGH) {
    if (mode == 0)
      client.println("<a href=\"/L1=OFF\"><button class=\"lbutton greenbutton button3\">Line-1</button></a><br/>");
    else
      client.println("<button class=\"lbutton greenbutton button3\">Line-1</button><br/>");
  } else {
    if (mode == 0)
      client.println("<a href=\"/L1=ON\"><button class=\"lbutton offbutton button3\">Line-1</button></a><br/>");
    else
      client.println("<button class=\"lbutton offbutton button3\">Line-1</button><br/>");
  }

  if (v2 == HIGH) {
    if (mode == 0)
      client.println("<a href=\"/L2=OFF\"><button class=\"lbutton greenbutton button3\">Line-2</button></a><br/>");
    else
      client.println("<button class=\"lbutton greenbutton button3\">Line-2</button><br/>");
  } else {
    if (mode == 0)
      client.println("<a href=\"/L2=ON\"><button class=\"lbutton offbutton button3\">Line-2</button></a><br/>");
    else
      client.println("<button class=\"lbutton offbutton button3\">Line-2</button><br/>");
  }

  if (v3 == HIGH) {
    if (mode == 0)
      client.println("<a href=\"/L3=OFF\"><button class=\"lbutton greenbutton button3\">Line-3</button></a><br/>");
    else
      client.println("<button class=\"lbutton greenbutton button3\">Line-3</button><br/>");
  } else {
    if (mode == 0)
      client.println("<a href=\"/L3=ON\"><button class=\"lbutton offbutton button3\">Line-3</button></a><br/>");
    else
      client.println("<button class=\"lbutton offbutton button3\">Line-3</button><br/>");
  }

  if (v4 == HIGH) {
    if (mode == 0)
      client.println("<a href=\"/L4=OFF\"><button class=\"lbutton greenbutton button3\">Line-4</button></a><br/>");
    else
      client.println("<button class=\"lbutton greenbutton button3\">Line-4</button><br/>");
  } else {
    if (mode == 0)
      client.println("<a href=\"/L4=ON\"><button class=\"lbutton offbutton button3\">Line-4</button></a><br/>");
    else
      client.println("<button class=\"lbutton offbutton button3\">Line-4</button><br/>");
  }

  if (emr == HIGH) {
    client.println("<a href=\"/EMR=OFF\"><button class=\"lbutton redbutton button3\">Emergency</button></a><br/>");
    client.println("<button class=\"lbutton offbutton button3\">Default</button><br/>");
  } else {
    client.println("<a href=\"/EMR=ON\"><button class=\"lbutton offbutton button3\">Emergency</button></a><br/>");
    client.println("<button class=\"lbutton greenbutton button3\">Default</button><br/>");
    client.println("<script>const myTimeout = setTimeout(myTimer, 5300);function myTimer(){location.reload();}</script>");
  }

  client.println("</center></body></html>");
  delay(1);
}

void defaultlights() {
  // Traffic Delay
  switch(mode) {
    case 1: v1 = HIGH; v2 = LOW; v3 = LOW; v4 = LOW; oldmode = 1; mode = 2; break;
    case 2: v1 = LOW; v2 = HIGH; v3 = LOW; v4 = LOW; oldmode = 2; mode = 3; break;
    case 3: v1 = LOW; v2 = LOW; v3 = HIGH; v4 = LOW; oldmode = 3; mode = 4; break;
    case 4: v1 = LOW; v2 = LOW; v3 = LOW; v4 = HIGH; oldmode = 4; mode = 1; break;
  }
  digitalWrite(l1, v1);
  digitalWrite(l2, v2);
  digitalWrite(l3, v3);
  digitalWrite(l4, v4);
}


